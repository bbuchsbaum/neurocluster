% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/supervoxels.R
\name{supervoxel_cluster_time}
\alias{supervoxel_cluster_time}
\title{Supervoxel Clustering in Time}
\usage{
supervoxel_cluster_time(
  feature_mat,
  K = min(nrow(feature_mat), 100),
  sigma1 = 1,
  sigma2 = 3,
  iterations = 50,
  TR = 2,
  filter = list(lp = 0, hp = 0),
  use_medoid = FALSE,
  nreps = 5
)
}
\arguments{
\item{feature_mat}{A matrix (nrows = time points, ncols = features) or vice versa.}

\item{K}{Number of clusters.}

\item{sigma1}{Heat kernel bandwidth for feature similarity (data vectors).}

\item{sigma2}{Heat kernel bandwidth for spatial similarity (coordinate vectors).}

\item{iterations}{Maximum number of cluster iterations.}

\item{TR}{Repetition time (seconds).}

\item{filter}{List specifying optional frequency filters, e.g., \code{list(lp=0.1, hp=0)}.}

\item{use_medoid}{Whether to use medoids for cluster centers.}

\item{nreps}{Number of repeated initializations.}
}
\value{
A list of cluster results (one per repetition), each of which
  has the same structure as \code{supervoxel_cluster_fit()}.
}
\description{
Cluster feature matrix (rows = time points) in a "supervoxel" style but over temporal dimension.
}
\examples{
feature_mat <- matrix(rnorm(100 * 10), 100, 10)
library(future)
plan(multicore)
cres <- supervoxel_cluster_time(t(feature_mat), K=20)
}
