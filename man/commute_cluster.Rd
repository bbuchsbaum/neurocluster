% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/commute_cluster.R
\name{commute_cluster}
\alias{commute_cluster}
\title{Commute Time Clustering}
\usage{
commute_cluster(
  bvec,
  mask,
  K = 100,
  ncomp = ceiling(sqrt(K * 2)),
  alpha = 0.5,
  sigma1 = 0.73,
  sigma2 = 5,
  connectivity = 27,
  weight_mode = c("binary", "heat")
)
}
\arguments{
\item{bvec}{A \code{NeuroVec} instance supplying the data to cluster.}

\item{mask}{A \code{NeuroVol} mask defining the voxels to include in the clustering result.
If the mask contains \code{numeric} data, nonzero values will define the included voxels.
If the mask is a \code{\linkS4class{LogicalNeuroVol}}, then \code{TRUE} will define the set
of included voxels.}

\item{K}{The number of clusters to find. Default is 100.}

\item{ncomp}{The number of components to use for the commute time embedding. Default is the ceiling of \code{sqrt(K2)}.}

\item{alpha}{A numeric value controlling the balance between spatial and feature similarity. Default is 0.5.}

\item{sigma1}{A numeric value controlling the spatial weighting function. Default is 0.73.}

\item{sigma2}{A numeric value controlling the feature weighting function. Default is 5.}

\item{connectivity}{An integer representing the number of nearest neighbors to consider when constructing the similarity graph.
Default is 27.}

\item{weight_mode}{A character string indicating the type of weight function for the similarity graph. Options are "binary" and "heat".
Default is "heat".}
}
\value{
A \code{list} of class \code{commute_time_cluster_result} with the following elements:
\describe{
\item{clusvol}{An instance of type \linkS4class{ClusteredNeuroVol}.}
\item{cluster}{A vector of cluster indices equal to the number of voxels in the mask.}
\item{centers}{A matrix of cluster centers with each column representing the feature vector for a cluster.}
\item{coord_centers}{A matrix of spatial coordinates with each row corresponding to a cluster.}
}
}
\description{
The commute_cluster function performs spatially constrained clustering on a \code{NeuroVec} instance
using the commute time distance and K-means clustering.
}
\examples{
mask <- NeuroVol(array(1, c(20,20,20)), NeuroSpace(c(20,20,20)))
vec <- replicate(10, NeuroVol(array(runif(202020), c(20,20,20)),
NeuroSpace(c(20,20,20))), simplify=FALSE)
vec <- do.call(concat, vec)

commute_res <- commute_cluster(vec, mask, K=100)

}
\seealso{
\code{\link{snic}}
}
