% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slic4d.R
\name{slic4d_supervoxels}
\alias{slic4d_supervoxels}
\title{Fast 4D SLIC supervoxels (mask-aware, gradient relocation, preserve-K)}
\usage{
slic4d_supervoxels(
  bvec,
  mask,
  K,
  compactness = 10,
  max_iter = 10,
  n_threads = 0,
  step_mm = NULL,
  n_components = 0,
  feature_norm = c("zscale", "l2", "none"),
  seed_method = c("mask_poisson", "mask_grid", "grid", "farthest"),
  seed_relocate = c("none", "correlation", "intensity", "spatial"),
  seed_relocate_radius = 1L,
  connectivity = c(26L, 6L),
  strict_connectivity = TRUE,
  enforce_connectivity = TRUE,
  preserve_k = FALSE,
  topup_iters = 2L,
  min_size = 0L,
  verbose = FALSE
)
}
\arguments{
\item{bvec}{A \code{NeuroVec} with dims (X, Y, Z, T).}

\item{mask}{A 3D \code{NeuroVol} (or logical array) indicating voxels to include.}

\item{K}{Target number of supervoxels.}

\item{compactness}{Spatial vs feature tradeoff (like SLIC 'm'). Larger = more compact.}

\item{max_iter}{Maximum iterations (default 10).}

\item{n_threads}{Number of CPU threads to use (0 = auto).}

\item{step_mm}{Optional approximate spacing between seeds in millimeters; if NULL,
computed as cubic root of bounding-box volume / K.}

\item{n_components}{If > 0, random-project each voxel's time series to this dimension
for speed (Johnson-Lindenstrauss style). 0 = use full time series.}

\item{feature_norm}{One of "zscale", "l2", "none".}

\item{seed_method}{One of "mask_poisson" (Poisson disk in mask), "mask_grid" (grid in mask),
"grid" (regular grid), "farthest" (farthest point sampling).}

\item{seed_relocate}{One of "correlation" (correlation gradient), "intensity" (mean intensity gradient),
"spatial" (spatial gradient using neighborweights), "none" (no relocation).}

\item{seed_relocate_radius}{Search radius in voxels for gradient-based seed relocation (default 1).}

\item{connectivity}{Neighborhood connectivity: 6 (face neighbors) or 26 (all neighbors).}

\item{strict_connectivity}{Enforce exactly one connected component per label (default TRUE).}

\item{enforce_connectivity}{Alias for strict_connectivity (backward compatibility).}

\item{preserve_k}{Ensure exactly K non-empty labels by splitting largest clusters (default FALSE).}

\item{topup_iters}{Number of refinement iterations after splitting for preserve_k (default 2).}

\item{min_size}{Minimum component size (voxels) to keep before relabel (default 0).}

\item{verbose}{Logical.}
}
\value{
A list of class \code{cluster_result} with elements:
\itemize{
  \item \code{clusvol}: \code{ClusteredNeuroVol} with the final labels
  \item \code{cluster}: integer vector of length = #masked voxels
  \item \code{centers}: matrix (K x d_feat) center features
  \item \code{coord_centers}: matrix (K x 3) spatial centers in mm
}
}
\description{
Cluster a 4D \code{NeuroVec} (x,y,z,time) into compact, spatially contiguous
3D supervoxels using an enhanced SLIC-style algorithm with mask-aware seeding,
gradient-based seed relocation, and exact K preservation.
}
\note{
Consider using \code{\link{cluster4d}} with \code{method = "slic"} for a 
standardized interface across all clustering methods.
}
\examples{
\dontrun{
  library(neuroim2)
  # Basic usage
  res <- slic4d_supervoxels(bvec, mask, K = 1000, compactness = 15)
  
  # With mask-aware seeding and gradient relocation
  res <- slic4d_supervoxels(bvec, mask, K = 1000, 
                           seed_method = "mask_poisson",
                           seed_relocate = "correlation",
                           preserve_k = TRUE)
}
}
