% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flash3d.R
\name{supervoxels_flash3d}
\alias{supervoxels_flash3d}
\title{FLASH-3D: Fast 3D Superclustering for fMRI}
\usage{
supervoxels_flash3d(
  vec,
  mask,
  K,
  lambda_s = 0.6,
  lambda_t = 1,
  lambda_g = 0,
  rounds = 2L,
  bits = 64L,
  dctM = 12L,
  vox_scale = NULL,
  barrier = NULL,
  verbose = FALSE
)
}
\arguments{
\item{vec}{A \code{NeuroVec} instance supplying the 4D data to cluster}

\item{mask}{A \code{NeuroVol} mask defining the voxels to include in the clustering result.
If the mask contains \code{numeric} data, nonzero values will define the included voxels.
If the mask is a \code{\linkS4class{LogicalNeuroVol}}, then \code{TRUE} will define the set
of included voxels.}

\item{K}{The number of clusters to find}

\item{lambda_s}{Spatial weight for distance penalty (default 0.6). Will be annealed upward over rounds.}

\item{lambda_t}{Temporal weight for Hamming distance of time-series hashes (default 1.0)}

\item{lambda_g}{Optional barrier weight (default 0.0). If >0, supply \code{barrier} volume.}

\item{rounds}{Number of outer rounds (seed→flood→recenter). Default 2, typically 2-3 is sufficient.}

\item{bits}{Length of temporal hash (64 or 128). Default 64.}

\item{dctM}{Number of low DCT coefficients to rank-hash (default 12, range 4-32)}

\item{vox_scale}{Voxel size scaling for spatial distance, e.g., c(dx,dy,dz). Default c(1,1,1)}

\item{barrier}{Optional 3D numeric array same dimensions as mask; higher values resist region growth}

\item{verbose}{Logical indicating whether to print progress messages}
}
\value{
A \code{list} of class \code{cluster_result} with the following elements:
\describe{
  \item{clusvol}{An instance of type \linkS4class{ClusteredNeuroVol}}
  \item{cluster}{An integer vector of cluster assignments for each voxel in mask}
  \item{centers}{A matrix of cluster centers in feature space (K x T)}
  \item{coord_centers}{A matrix of spatial coordinates of cluster centers (K x 3)}
  \item{K}{The number of clusters}
  \item{method}{A character string indicating the method used ("FLASH-3D")}
}
}
\description{
Performs spatially-constrained clustering using Fast Low-rank Approximate 
Superclusters for Hemodynamics (FLASH-3D). This algorithm uses DCT-based 
temporal hashing and 3D jump-flood propagation for efficient clustering.
}
\details{
FLASH-3D uses a novel approach combining:
\itemize{
  \item DCT-based temporal feature hashing for fast similarity computation
  \item Jump-flood algorithm for efficient spatial propagation
  \item Blue-noise seeding for optimal initial cluster placement
  \item Annealing of spatial weights to encourage compact clusters
}

The algorithm is particularly efficient for large-scale fMRI data, offering
significant speed improvements over iterative methods while maintaining
clustering quality.
}
\note{
Consider using \code{\link{cluster4d}} with \code{method = "flash3d"} for a 
standardized interface across all clustering methods.
}
\examples{
\dontrun{
  # Basic usage
  result <- supervoxels_flash3d(vec, mask, K = 100)
  
  # With custom parameters
  result <- supervoxels_flash3d(vec, mask, K = 100, 
                                lambda_s = 0.8, lambda_t = 1.2,
                                bits = 128, dctM = 16)
  
  # With barrier for anatomy-aware clustering
  barrier_vol <- create_anatomical_barrier(mask)
  result <- supervoxels_flash3d(vec, mask, K = 100,
                                lambda_g = 0.5, barrier = barrier_vol)
}

}
\references{
FLASH-3D algorithm for fast superclustering of fMRI data (2025)
}
\seealso{
\code{\link{supervoxels}}, \code{\link{snic}}, \code{\link{slic4d_supervoxels}}
}
