% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slice_cluster.R
\name{slice_msf}
\alias{slice_msf}
\title{SLiCE-MSF: Slice-wise, Low-rank, Minimum-Spanning Forest Clustering}
\usage{
slice_msf(
  vec,
  mask,
  target_k_global = -1,
  target_k_per_slice = -1,
  r = 12,
  compactness = 5,
  min_size = 80,
  num_runs = 3,
  consensus = TRUE,
  stitch_z = TRUE,
  theta_link = 0.85,
  min_contact = 1,
  nbhd = 8,
  gamma = 1.5,
  k_fuse = NULL,
  min_size_fuse = NULL,
  use_features = FALSE,
  lambda = 0.7
)
}
\arguments{
\item{vec}{A \code{NeuroVec} or \code{SparseNeuroVec} instance supplying the time series data to cluster.}

\item{mask}{A \code{NeuroVol} mask defining the voxels to include in the clustering result.
If the mask contains \code{numeric} data, nonzero values will define the included voxels.
If the mask is a \code{\linkS4class{LogicalNeuroVol}}, then \code{TRUE} will define the set
of included voxels.}

\item{target_k_global}{Target number of clusters across entire volume (exact if positive, uses RAG agglomeration).
Default is -1 (no target, uses natural FH clustering).}

\item{target_k_per_slice}{Target number of clusters per slice (exact if positive, ignored if stitch_z=TRUE).
Default is -1 (no target).}

\item{r}{DCT sketch rank (number of basis functions, excluding DC). Default is 12.}

\item{compactness}{A numeric value controlling the compactness of the clusters, with larger values resulting
in more compact clusters. Internally mapped to the scale parameter k. Default is 5.}

\item{min_size}{Minimum cluster size in voxels. Smaller clusters are merged. Default is 80.}

\item{num_runs}{Number of independent segmentation runs. If > 1, consensus fusion is applied. Default is 3.}

\item{consensus}{Logical. If TRUE and num_runs > 1, apply consensus fusion. Default is TRUE.}

\item{stitch_z}{Logical. If TRUE, stitch 2D slice clusters into 3D clusters. Default is TRUE.}

\item{theta_link}{Centroid similarity threshold for cross-slice stitching (0-1). Default is 0.85.}

\item{min_contact}{Minimum touching voxels between slices to attempt stitching. Default is 1.}

\item{nbhd}{Neighborhood connectivity (4, 6, or 8). Default is 8.}

\item{gamma}{Reliability weighting exponent. Higher values emphasize reliable voxels. Default is 1.5.}

\item{k_fuse}{Scale parameter for consensus fusion. If NULL, uses same as k. Default is NULL.}

\item{min_size_fuse}{Minimum cluster size for consensus. If NULL, uses min_size. Default is NULL.}

\item{use_features}{Use feature similarity in consensus fusion. Default is FALSE.}

\item{lambda}{Mix parameter for consensus (0-1). Higher values weight label agreement. Default is 0.7.}
}
\value{
A \code{list} of class \code{slice_msf_cluster_result} with the following elements:
\describe{
\item{clusvol}{An instance of type \linkS4class{ClusteredNeuroVol}.}
\item{cluster}{A vector of cluster indices equal to the number of voxels in the mask.}
\item{centers}{A matrix of cluster centers with each column representing the feature vector for a cluster.}
\item{coord_centers}{A matrix of spatial coordinates with each row corresponding to a cluster.}
\item{runs}{If num_runs > 1, a list of individual run results.}
}
}
\description{
The slice_msf function performs spatially constrained clustering on a \code{NeuroVec} instance
using the SLiCE-MSF algorithm. This method uses temporal sketching via DCT basis functions,
split-half reliability weighting, and Felzenszwalb-Huttenlocher graph segmentation.
}
\examples{
\dontrun{
mask <- NeuroVol(array(1, c(64,64,32)), NeuroSpace(c(64,64,32)))
vec <- replicate(100, NeuroVol(array(rnorm(64*64*32), c(64,64,32)),
                 NeuroSpace(c(64,64,32))), simplify=FALSE)
vec <- do.call(concat, vec)

# Single run
result <- slice_msf(vec, mask, K=200, num_runs=1)

# Multi-run consensus
result <- slice_msf(vec, mask, K=200, num_runs=3, consensus=TRUE)
}

# Using exact K targeting
result <- slice_msf(vec, mask, target_k_global=100, use_features=TRUE)

}
\references{
Felzenszwalb, P. F., & Huttenlocher, D. P. (2004). Efficient graph-based image segmentation.
International journal of computer vision, 59(2), 167-181.
}
